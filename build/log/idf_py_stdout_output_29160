[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2\examples\get-started\myproject\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Espressif/frameworks/esp-idf-v5.2/examples/get-started/myproject/build/bootloader/bootloader.bin"
Bootloader binary size 0x5240 bytes. 0x2dc0 bytes (36%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/lcd.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/atp.c.obj
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/sht.c.obj
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable atp.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Espressif/frameworks/esp-idf-v5.2/examples/get-started/myproject/build/atp.bin
[9/9] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2\examples\get-started\myproject\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/esp-idf-v5.2/examples/get-started/myproject/build/partition_table/partition-table.bin C:/Espressif/frameworks/esp-idf-v5.2/examples/get-started/myproject/build/atp.bin"
atp.bin binary size 0x3e760 bytes. Smallest app partition is 0x100000 bytes. 0xc18a0 bytes (76%) free.
